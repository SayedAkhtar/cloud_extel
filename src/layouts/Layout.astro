---
interface Props {
  title: string;
}
import "@fontsource-variable/montserrat";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import Sidenav from "../components/SideNav.astro";
import "../global.css";
import "aos/dist/aos.css";
const { title } = Astro.props;
const routePath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="CloudExtel " />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      property="og:title"
      content="CloudExtel - India's Leading Network as a Service (NaaS) Provider"
    />
    <meta
      property="og:description"
      content="At CloudExtel, we're Reinventing Digital Infrastructure with our cutting-edge solutions like Small Cells, Fiber, FTTH, and more.."
    />
    <meta
      property="og:image"
      content="https://cloudextel.com/wp-content/uploads/2023/08/Logo.svg"
    />
    <meta property="og:url" content="https://cloudextel.com" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:title"
      content="CloudExtel - India's Leading Network as a Service (NaaS) Provider"
    />
    <meta
      name="twitter:description"
      content="At CloudExtel, we're Reinventing Digital Infrastructure with our cutting-edge solutions like Small Cells, Fiber, FTTH, and more.."
    />
    <meta
      name="twitter:image"
      content="https://cloudextel.com/wp-content/uploads/2023/08/Logo.svg"
    />

    <title>{title}</title>

    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "CloudExtel",
        "url": "https://cloudextel.com",
        "logo": "https://cloudextel.com/assets/logo.png",
        "description": "Indiaâ€™s first full-stack Network as a Service (NaaS) provider, offering Small Cell Hosting, FTTH, and Virtualized Networks.",
        "sameAs": [
          "https://www.linkedin.com/company/cloudextel",
          "https://twitter.com/cloudextel"
        ],
        "hasPart": [
          {
            "@type": "WebPage",
            "name": "About Us",
            "url": "https://cloudextel.com/about-us/"
          },
          {
            "@type": "WebPage",
            "name": "Our Solutions",
            "url": "https://cloudextel.com/our-solutions/"
          },
          {
            "@type": "WebPage",
            "name": "Life at CloudExtel",
            "url": "https://cloudextel.com/life-at-cloud-extel/"
          },
          {
            "@type": "WebPage",
            "name": "Media",
            "url": "https://cloudextel.com/media/"
          },
          {
            "@type": "WebPage",
            "name": "Contact Us",
            "url": "https://cloudextel.com/contact-us/"
          }
        ]
      }
    </script>
  </head>
  <body id="mainBody">
    {
      routePath.includes("media") || routePath.includes("policies") ? null : (
        <Navbar />
      )
    }
    <Sidenav />
    <slot />
    <Footer />
  </body>
  <script>
    import AOS from "aos";
    document.addEventListener("DOMContentLoaded", () => {
      AOS.init({
        once: true,
        duration: 1000,
      });
    });

    const sidebar = document.querySelector<HTMLDivElement>("#sidebar");
    const toggleCheck = document.querySelector<HTMLInputElement>("#nav-toggle");
    const sideNavClose =
      document.querySelector<HTMLButtonElement>("#close-sidenav");
    const navLinks =
      document.querySelectorAll<HTMLAnchorElement>("#sidebar > nav > a");
    if (toggleCheck && sideNavClose && sidebar) {
      sideNavClose.addEventListener("click", () => {
        toggleCheck.checked = false; // Checked property is specific to HTMLInputElement
        sidebar.style.left = "150%"; // Style property is specific to HTMLElement
      });
    }
    if (navLinks && sidebar && toggleCheck) {
      navLinks.forEach((link) => {
        link.addEventListener("click", () => {
          toggleCheck.checked = false; // Checked property is specific to HTMLInputElement
          sidebar.style.left = "150%"; // Style property is specific to HTMLElement
        });
      });
    }

    if (toggleCheck && sidebar) {
      toggleCheck.addEventListener("change", function (event: Event) {
        const target = event.target as HTMLInputElement; // Type assertion for target
        if (target.checked) {
          if (detectMob()) {
            sidebar.style.left = "0%";
          } else if (window.innerWidth >= 700 && window.innerWidth <= 1000) {
            sidebar.style.left = "55%";
          } else {
            sidebar.style.left = "65%";
          }
        } else {
          sidebar.style.left = "150%";
        }
      });
    }

    document.addEventListener("scroll", () => {
      const mainComponent = document.querySelector<HTMLDivElement>("main");
      if (mainComponent && toggleCheck && sidebar) {
        const scrollPosition = window.scrollY;
        if (scrollPosition + 100 > mainComponent.clientHeight) {
          toggleCheck.checked = false;
          sidebar.style.left = "150%";
        }
      }
    });

    function detectMob() {
      const isMobileDevice =
        /Android|iPhone|iPod|Opera Mini|IEMobile|WPDesktop/i.test(
          navigator.userAgent
        );
      const isSmallScreen = window.innerWidth <= 500;
      return isMobileDevice || isSmallScreen;
    }
  </script>
</html>
